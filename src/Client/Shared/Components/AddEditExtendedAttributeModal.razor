@using PAS.Domain.Enums

@typeparam TId
@typeparam TEntityId
@typeparam TEntity
@typeparam TExtendedAttribute

<EditForm Model="@AddEditExtendedAttributeModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudDialog>
        <TitleContent>
            @{
                if (AddEditExtendedAttributeModel.Id.Equals(default))
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                        Add Extended Attribute
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
                        Update Extended Attribute
                    </MudText>
                }
            }
        </TitleContent>
        <DialogContent>
            <MudGrid>
                @if (AddEditExtendedAttributeModel.Id.Equals(default) != true)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField Disabled For="@(() => AddEditExtendedAttributeModel.Id)" @bind-Value="AddEditExtendedAttributeModel.Id" Label="Id" />
                    </MudItem>
                }
                <MudItem xs="12" md="6">
                    <MudTextField Disabled For="@(() => AddEditExtendedAttributeModel.EntityId)" @bind-Value="AddEditExtendedAttributeModel.EntityId" Label="Entity Id" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudSelect T="EntityExtendedAttributeType" Label="Type" For="@(() => AddEditExtendedAttributeModel.Type)" @bind-Value="AddEditExtendedAttributeModel.Type" Variant="Variant.Filled">
                        @foreach (var typeName in Enum.GetNames(typeof(EntityExtendedAttributeType)))
                        {
                            <MudSelectItem T="EntityExtendedAttributeType" Value="@(Enum.GetValues<EntityExtendedAttributeType>().FirstOrDefault(x => x.ToString() == typeName))">@typeName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField For="@(() => AddEditExtendedAttributeModel.Key)" @bind-Value="AddEditExtendedAttributeModel.Key" Label="Key" />
                </MudItem>
                @if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.Decimal)
                {
                    <MudItem xs="12" md="6">
                        <MudNumericField For="@(() => AddEditExtendedAttributeModel.Decimal)" @bind-Value="AddEditExtendedAttributeModel.Decimal" Label="Decimal" />
                    </MudItem>
                }
                else if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.Text)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField For="@(() => AddEditExtendedAttributeModel.Text)" @bind-Value="AddEditExtendedAttributeModel.Text" Label="Text" />
                    </MudItem>
                }
                else if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.DateTime)
                {
                    <MudItem xs="12" md="6">
                        <MudDatePicker @ref="_datePicker" PickerVariant="PickerVariant.Dialog" @bind-Date="AddEditExtendedAttributeModel.DateTime" Label="Date">
                            <PickerActions>
                                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _datePicker.Clear())">Clear"]</MudButton>
                                <MudButton OnClick="@(() => _datePicker.Close(false))">Cancel"]</MudButton>
                                <MudButton Color="Color.Primary" OnClick="@(() => _datePicker.Close())">Ok"]</MudButton>
                            </PickerActions>
                        </MudDatePicker>

                        <MudTimePicker @ref="_timePicker" PickerVariant="PickerVariant.Dialog" Label="Time" @bind-Time="_time">
                            <PickerActions>
                                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _timePicker.Clear())">Clear"]</MudButton>
                                <MudButton OnClick="@(() => _timePicker.Close(false))">Cancel"]</MudButton>
                                <MudButton Color="Color.Primary" OnClick="@(() => _timePicker.Close())">Ok"]</MudButton>
                            </PickerActions>
                        </MudTimePicker>
                    </MudItem>
                }
                else if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.Json)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField For="@(() => AddEditExtendedAttributeModel.Json)" @bind-Value="AddEditExtendedAttributeModel.Json" Label="Json" Variant="Variant.Outlined" Lines="10" />
                    </MudItem>
                }
                <MudItem xs="12" md="6">
                    <MudTextField T="string" For="@(() => AddEditExtendedAttributeModel.ExternalId)" @bind-Value="AddEditExtendedAttributeModel.ExternalId" Label="External Id" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField T="string" For="@(() => AddEditExtendedAttributeModel.Group)" @bind-Value="AddEditExtendedAttributeModel.Group" Label="Group" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField For="@(() => AddEditExtendedAttributeModel.Description)" @bind-Value="AddEditExtendedAttributeModel.Description" Label="Description" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudCheckBox For="@(() => AddEditExtendedAttributeModel.IsActive)" @bind-Checked="@AddEditExtendedAttributeModel.IsActive" Color="Color.Secondary" Label="Is Active" />
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel">Cancel"]</MudButton>
            @if (AddEditExtendedAttributeModel.Id.Equals(default) != true)
            {
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Secondary">Update</MudButton>
            }
            else
            {
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Success">Save</MudButton>
            }
        </DialogActions>
    </MudDialog>
</EditForm>